name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          - arch-name: aarch64-apple-darwin
            os: macos-latest
            target: aarch64-apple-darwin

          - arch-name: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - arch-name: aarch64-pc-windows-msvc
            os: windows-latest
            target: aarch64-pc-windows-msvc

          - arch-name: x86_64-apple-darwin
            os: macos-latest
            target: x86_64-apple-darwin

          - arch-name: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - arch-name: x86_64-pc-windows-msvc
            os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Install dependencies
        run: mkdir -p .cargo

      - name: Install dependencies for Windows
        if: matrix.os == 'windows-latest'
        run: | 
          choco install nasm
          echo "C:\Program Files\NASM" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install dependencies for aarch64-unknown-linux-gnu
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: | 
          sudo apt update
          sudo apt install -y gcc-aarch64-linux-gnu
          echo '[target.aarch64-unknown-linux-gnu]' > .cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml

      - name: Build
        run: |
          cargo build --verbose --target ${{ matrix.target }}
          cargo build --verbose --all-features --target ${{ matrix.target }}
          cargo build --verbose --no-default-features --target ${{ matrix.target }}

      - name: Build binaries
        run: |
          cargo build --verbose --bin ombrac-client --features binary --target ${{ matrix.target }}
          cargo build --verbose --bin ombrac-server --features binary --target ${{ matrix.target }}

      - name: Test
        if: |
          matrix.target == 'x86_64-apple-darwin' ||
          matrix.target == 'x86_64-pc-windows-msvc' ||
          matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          cargo test --verbose --target ${{ matrix.target }}

  dry-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Publish ombrac
        working-directory: crates/ombrac
        run: cargo publish --dry-run

      - name: Publish ombrac-macros
        working-directory: crates/ombrac-macros
        run: cargo publish --dry-run

      - name: Publish ombrac-transport
        working-directory: crates/ombrac-transport
        run: cargo publish --dry-run

      - name: Publish ombrac-server
        working-directory: crates/ombrac-server
        run: cargo publish --dry-run

      - name: Publish ombrac-client
        working-directory: crates/ombrac-client
        run: cargo publish --dry-run
